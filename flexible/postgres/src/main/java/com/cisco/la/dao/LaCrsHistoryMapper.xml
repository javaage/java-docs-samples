<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cisco.la.dao.LaCrsHistoryDao">
    <!-- LaCrsHistory的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_LaCrsHistory_Map" type="com.cisco.la.entity.LaCrsHistory">
        <result column="hstr_usr_id" property="hstrUsrId" />
        <result column="hstr_crs_id" property="hstrCrsId" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:la_crs_history的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="la_crs_history_Column">
        la_crs_history.hstr_usr_id as hstr_usr_id
        ,la_crs_history.hstr_crs_id as hstr_crs_id
    </sql>

    <!--获得类名为:LaCrsHistory对应的数据库表的数据总行数 -->
    <select id="getLaCrsHistoryRowCount" parameterType="com.cisco.la.common.Assist" resultType="java.lang.Long">
        select count(*) from la_crs_history
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:LaCrsHistory对应数据库中表的数据集合 -->
    <select id="selectLaCrsHistory" parameterType="com.cisco.la.common.Assist"  resultMap="result_LaCrsHistory_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="la_crs_history_Column" /> 
            </otherwise>
        </choose>
        from la_crs_history
        <if test="require!=null"><include refid="Assist" /></if>
        <if test="order !=null">${order}</if>
        <if test="rowSize !=null"> LIMIT #{rowSize} <if test="startRow !=null"> OFFSET #{startRow}</if></if>
    </select> 

    <!-- 将LaCrsHistory插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertLaCrsHistory" parameterType="com.cisco.la.entity.LaCrsHistory">
        insert into la_crs_history(hstr_usr_id,hstr_crs_id) 
        values(#{hstrUsrId},#{hstrCrsId})
    </insert>

    <!-- 将LaCrsHistory中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyLaCrsHistory" parameterType="com.cisco.la.entity.LaCrsHistory">
        insert into la_crs_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="hstrUsrId != null">hstr_usr_id,</if>
            <if test="hstrCrsId != null">hstr_crs_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="hstrUsrId != null"> #{hstrUsrId},</if>
            <if test="hstrCrsId != null"> #{hstrCrsId},</if>
        </trim>
    </insert>

    <!-- 将LaCrsHistory批量插入到对应数据库的表中-->
    <insert id="insertLaCrsHistoryByBatch" parameterType="ArrayList">
        insert into la_crs_history(hstr_usr_id,hstr_crs_id) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.hstrUsrId},#{item.hstrCrsId})
        </foreach>
    </insert>

    <!-- 通过辅助工具Assist中的条件将LaCrsHistory对应的数据库表的数据删除-->
    <delete id="deleteLaCrsHistory" parameterType="com.cisco.la.common.Assist">
        delete from la_crs_history
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

</mapper>