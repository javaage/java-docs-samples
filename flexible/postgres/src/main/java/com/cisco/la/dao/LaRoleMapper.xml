<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cisco.la.dao.LaRoleDao">
    <!-- LaRole的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_LaRole_Map" type="com.cisco.la.entity.LaRole">
        <id column="rl_name" property="rlName" />
        <result column="rl_bu" property="rlBu" />
        <result column="rl_title" property="rlTitle" />
        <result column="rl_grade" property="rlGrade" />
        <result column="rl_active" property="rlActive" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:la_role的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="la_role_Column">
        la_role.rl_name as rl_name
        ,la_role.rl_bu as rl_bu
        ,la_role.rl_title as rl_title
        ,la_role.rl_grade as rl_grade
        ,la_role.rl_active as rl_active
    </sql>

    <!--获得类名为:LaRole对应的数据库表的数据总行数 -->
    <select id="getLaRoleRowCount" parameterType="com.cisco.la.common.Assist" resultType="java.lang.Long">
        select count(rl_name) from la_role
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:LaRole对应数据库中表的数据集合 -->
    <select id="selectLaRole" parameterType="com.cisco.la.common.Assist"  resultMap="result_LaRole_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="la_role_Column" /> 
            </otherwise>
        </choose>
        from la_role
        <if test="require!=null"><include refid="Assist" /></if>
        <if test="order !=null">${order}</if>
        <if test="rowSize !=null"> LIMIT #{rowSize} <if test="startRow !=null"> OFFSET #{startRow}</if></if>
    </select> 

    <!-- 获得一个LaRole对象,以参数LaRole对象中不为空的属性作为条件进行查询-->
    <select id="selectLaRoleByObj" parameterType="com.cisco.la.entity.LaRole" resultMap="result_LaRole_Map">
        select 
            <include refid="la_role_Column" /> 
        from la_role
        <where>
            <if test="rlActive != null "> and la_role.rl_active = #{rlActive}</if>
            <if test="rlGrade != null "> and la_role.rl_grade = #{rlGrade}</if>
            <if test="rlTitle != null "> and la_role.rl_title = #{rlTitle}</if>
            <if test="rlBu != null "> and la_role.rl_bu = #{rlBu}</if>
            <if test="rlName != null "> and la_role.rl_name = #{rlName}</if>
        </where>
    </select> 

    <!-- 通过LaRole的id获得对应数据库中表的数据对象-->
    <select id="selectLaRoleById" parameterType="java.lang.String" resultMap="result_LaRole_Map">
        select 
            <include refid="la_role_Column" /> 
        from la_role
        where la_role.rl_name = #{id}
    </select> 

    <!-- 将LaRole插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertLaRole" parameterType="com.cisco.la.entity.LaRole">
        insert into la_role(rl_name,rl_bu,rl_title,rl_grade,rl_active) 
        values(#{rlName},#{rlBu},#{rlTitle},#{rlGrade},#{rlActive})
    </insert>

    <!-- 将LaRole中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyLaRole" parameterType="com.cisco.la.entity.LaRole">
        insert into la_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rlName != null">rl_name,</if>
            <if test="rlBu != null">rl_bu,</if>
            <if test="rlTitle != null">rl_title,</if>
            <if test="rlGrade != null">rl_grade,</if>
            <if test="rlActive != null">rl_active,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rlName != null"> #{rlName},</if>
            <if test="rlBu != null"> #{rlBu},</if>
            <if test="rlTitle != null"> #{rlTitle},</if>
            <if test="rlGrade != null"> #{rlGrade},</if>
            <if test="rlActive != null"> #{rlActive},</if>
        </trim>
    </insert>

    <!-- 将LaRole批量插入到对应数据库的表中-->
    <insert id="insertLaRoleByBatch" parameterType="ArrayList">
        insert into la_role(rl_name,rl_bu,rl_title,rl_grade,rl_active) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.rlName},#{item.rlBu},#{item.rlTitle},#{item.rlGrade},#{item.rlActive})
        </foreach>
    </insert>

    <!-- 通过LaRole的id将数据库表中对应的数据删除-->
    <delete id="deleteLaRoleById" parameterType="java.lang.String">
        delete from la_role
        where rl_name = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将LaRole对应的数据库表的数据删除-->
    <delete id="deleteLaRole" parameterType="com.cisco.la.common.Assist">
        delete from la_role
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过LaRole的id将LaRole的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateLaRoleById" parameterType="com.cisco.la.entity.LaRole">
        update la_role set
            rl_bu=#{rlBu}
            ,rl_title=#{rlTitle}
            ,rl_grade=#{rlGrade}
            ,rl_active=#{rlActive}
        where rl_name=#{rlName}
    </update>

    <!-- 通过LaRole的id将LaRole中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyLaRoleById" parameterType="com.cisco.la.entity.LaRole">
        update la_role
        <set>
            <if test="rlBu != null">
                rl_bu=#{rlBu},
            </if>
            <if test="rlTitle != null">
                rl_title=#{rlTitle},
            </if>
            <if test="rlGrade != null">
                rl_grade=#{rlGrade},
            </if>
            <if test="rlActive != null">
                rl_active=#{rlActive},
            </if>
        </set>
        where rl_name=#{rlName}
    </update>

    <!-- 通过辅助工具Assist中的条件将LaRole中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateLaRole" parameterType="map">
        update la_role
        <set>
                rl_name=#{enti.rlName},
                rl_bu=#{enti.rlBu},
                rl_title=#{enti.rlTitle},
                rl_grade=#{enti.rlGrade},
                rl_active=#{enti.rlActive},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将LaRole中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyLaRole" parameterType="map">
        update la_role
        <set>
            <if test="enti.rlName != null">
                rl_name=#{enti.rlName},
            </if>
            <if test="enti.rlBu != null">
                rl_bu=#{enti.rlBu},
            </if>
            <if test="enti.rlTitle != null">
                rl_title=#{enti.rlTitle},
            </if>
            <if test="enti.rlGrade != null">
                rl_grade=#{enti.rlGrade},
            </if>
            <if test="enti.rlActive != null">
                rl_active=#{enti.rlActive},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>