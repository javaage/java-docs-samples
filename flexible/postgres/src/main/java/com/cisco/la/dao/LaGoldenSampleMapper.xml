<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cisco.la.dao.LaGoldenSampleDao">
    <!-- LaGoldenSample的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_LaGoldenSample_Map" type="com.cisco.la.entity.LaGoldenSample">
        <result column="smpl_optional" property="smplOptional" />
        <result column="smpl_mandatory" property="smplMandatory" />
        <result column="smpl_name" property="smplName" />
        <result column="smpl_rl_name" property="smplRlName" />
        <result column="smpl_update_time" property="smplUpdateTime" />
        <result column="smpl_role" property="smplRole" />
        <result column="smpl_active" property="smplActive" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:la_golden_sample的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="la_golden_sample_Column">
        la_golden_sample.smpl_optional as smpl_optional
        ,la_golden_sample.smpl_mandatory as smpl_mandatory
        ,la_golden_sample.smpl_name as smpl_name
        ,la_golden_sample.smpl_rl_name as smpl_rl_name
        ,la_golden_sample.smpl_update_time as smpl_update_time
        ,la_golden_sample.smpl_role as smpl_role
        ,la_golden_sample.smpl_active as smpl_active
    </sql>

    <!--获得类名为:LaGoldenSample对应的数据库表的数据总行数 -->
    <select id="getLaGoldenSampleRowCount" parameterType="com.cisco.la.common.Assist" resultType="java.lang.Long">
        select count(*) from la_golden_sample
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:LaGoldenSample对应数据库中表的数据集合 -->
    <select id="selectLaGoldenSample" parameterType="com.cisco.la.common.Assist"  resultMap="result_LaGoldenSample_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="la_golden_sample_Column" /> 
            </otherwise>
        </choose>
        from la_golden_sample
        <if test="require!=null"><include refid="Assist" /></if>
        <if test="order !=null">${order}</if>
        <if test="rowSize !=null"> LIMIT #{rowSize} <if test="startRow !=null"> OFFSET #{startRow}</if></if>
    </select> 

    <!-- 将LaGoldenSample插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertLaGoldenSample" parameterType="com.cisco.la.entity.LaGoldenSample">
        insert into la_golden_sample(smpl_optional,smpl_mandatory,smpl_name,smpl_rl_name,smpl_update_time,smpl_role,smpl_active) 
        values(#{smplOptional},#{smplMandatory},#{smplName},#{smplRlName},#{smplUpdateTime},#{smplRole},#{smplActive})
    </insert>

    <!-- 将LaGoldenSample中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyLaGoldenSample" parameterType="com.cisco.la.entity.LaGoldenSample">
        insert into la_golden_sample
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="smplOptional != null">smpl_optional,</if>
            <if test="smplMandatory != null">smpl_mandatory,</if>
            <if test="smplName != null">smpl_name,</if>
            <if test="smplRlName != null">smpl_rl_name,</if>
            <if test="smplUpdateTime != null">smpl_update_time,</if>
            <if test="smplRole != null">smpl_role,</if>
            <if test="smplActive != null">smpl_active,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="smplOptional != null"> #{smplOptional},</if>
            <if test="smplMandatory != null"> #{smplMandatory},</if>
            <if test="smplName != null"> #{smplName},</if>
            <if test="smplRlName != null"> #{smplRlName},</if>
            <if test="smplUpdateTime != null"> #{smplUpdateTime},</if>
            <if test="smplRole != null"> #{smplRole},</if>
            <if test="smplActive != null"> #{smplActive},</if>
        </trim>
    </insert>

    <!-- 将LaGoldenSample批量插入到对应数据库的表中-->
    <insert id="insertLaGoldenSampleByBatch" parameterType="ArrayList">
        insert into la_golden_sample(smpl_optional,smpl_mandatory,smpl_name,smpl_rl_name,smpl_update_time,smpl_role,smpl_active) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.smplOptional},#{item.smplMandatory},#{item.smplName},#{item.smplRlName},#{item.smplUpdateTime},#{item.smplRole},#{item.smplActive})
        </foreach>
    </insert>

    <!-- 通过辅助工具Assist中的条件将LaGoldenSample对应的数据库表的数据删除-->
    <delete id="deleteLaGoldenSample" parameterType="com.cisco.la.common.Assist">
        delete from la_golden_sample
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

</mapper>