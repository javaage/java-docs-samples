<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cisco.la.dao.LaUserDao">
    <!-- LaUser的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_LaUser_Map" type="com.cisco.la.entity.LaUser">
        <id column="usr_id" property="usrId" />
        <result column="usr_balance" property="usrBalance" />
        <result column="usr_active" property="usrActive" />
        <result column="usr_title" property="usrTitle" />
        <result column="usr_rl_name" property="usrRlName" />
        <result column="usr_name" property="usrName" />
        <result column="usr_grade" property="usrGrade" />
        <result column="usr_bu" property="usrBu" />
        <result column="usr_budget" property="usrBudget" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:la_user的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="la_user_Column">
        la_user.usr_id as usr_id
        ,la_user.usr_balance as usr_balance
        ,la_user.usr_active as usr_active
        ,la_user.usr_title as usr_title
        ,la_user.usr_rl_name as usr_rl_name
        ,la_user.usr_name as usr_name
        ,la_user.usr_grade as usr_grade
        ,la_user.usr_bu as usr_bu
        ,la_user.usr_budget as usr_budget
    </sql>

    <!--获得类名为:LaUser对应的数据库表的数据总行数 -->
    <select id="getLaUserRowCount" parameterType="com.cisco.la.common.Assist" resultType="java.lang.Long">
        select count(usr_id) from la_user
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:LaUser对应数据库中表的数据集合 -->
    <select id="selectLaUser" parameterType="com.cisco.la.common.Assist"  resultMap="result_LaUser_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="la_user_Column" /> 
            </otherwise>
        </choose>
        from la_user
        <if test="require!=null"><include refid="Assist" /></if>
        <if test="order !=null">${order}</if>
        <if test="rowSize !=null"> LIMIT #{rowSize} <if test="startRow !=null"> OFFSET #{startRow}</if></if>
    </select> 

    <!-- 获得一个LaUser对象,以参数LaUser对象中不为空的属性作为条件进行查询-->
    <select id="selectLaUserByObj" parameterType="com.cisco.la.entity.LaUser" resultMap="result_LaUser_Map">
        select 
            <include refid="la_user_Column" /> 
        from la_user
        <where>
            <if test="usrBudget != null "> and la_user.usr_budget = #{usrBudget}</if>
            <if test="usrBu != null "> and la_user.usr_bu = #{usrBu}</if>
            <if test="usrGrade != null "> and la_user.usr_grade = #{usrGrade}</if>
            <if test="usrName != null "> and la_user.usr_name = #{usrName}</if>
            <if test="usrRlName != null "> and la_user.usr_rl_name = #{usrRlName}</if>
            <if test="usrTitle != null "> and la_user.usr_title = #{usrTitle}</if>
            <if test="usrActive != null "> and la_user.usr_active = #{usrActive}</if>
            <if test="usrBalance != null "> and la_user.usr_balance = #{usrBalance}</if>
            <if test="usrId != null "> and la_user.usr_id = #{usrId}</if>
        </where>
    </select> 

    <!-- 通过LaUser的id获得对应数据库中表的数据对象-->
    <select id="selectLaUserById" parameterType="java.lang.String" resultMap="result_LaUser_Map">
        select 
            <include refid="la_user_Column" /> 
        from la_user
        where la_user.usr_id = #{id}
    </select> 

    <!-- 将LaUser插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertLaUser" parameterType="com.cisco.la.entity.LaUser">
        insert into la_user(usr_id,usr_balance,usr_active,usr_title,usr_rl_name,usr_name,usr_grade,usr_bu,usr_budget) 
        values(#{usrId},#{usrBalance},#{usrActive},#{usrTitle},#{usrRlName},#{usrName},#{usrGrade},#{usrBu},#{usrBudget})
    </insert>

    <!-- 将LaUser中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyLaUser" parameterType="com.cisco.la.entity.LaUser">
        insert into la_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="usrId != null">usr_id,</if>
            <if test="usrBalance != null">usr_balance,</if>
            <if test="usrActive != null">usr_active,</if>
            <if test="usrTitle != null">usr_title,</if>
            <if test="usrRlName != null">usr_rl_name,</if>
            <if test="usrName != null">usr_name,</if>
            <if test="usrGrade != null">usr_grade,</if>
            <if test="usrBu != null">usr_bu,</if>
            <if test="usrBudget != null">usr_budget,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="usrId != null"> #{usrId},</if>
            <if test="usrBalance != null"> #{usrBalance},</if>
            <if test="usrActive != null"> #{usrActive},</if>
            <if test="usrTitle != null"> #{usrTitle},</if>
            <if test="usrRlName != null"> #{usrRlName},</if>
            <if test="usrName != null"> #{usrName},</if>
            <if test="usrGrade != null"> #{usrGrade},</if>
            <if test="usrBu != null"> #{usrBu},</if>
            <if test="usrBudget != null"> #{usrBudget},</if>
        </trim>
    </insert>

    <!-- 将LaUser批量插入到对应数据库的表中-->
    <insert id="insertLaUserByBatch" parameterType="ArrayList">
        insert into la_user(usr_id,usr_balance,usr_active,usr_title,usr_rl_name,usr_name,usr_grade,usr_bu,usr_budget) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.usrId},#{item.usrBalance},#{item.usrActive},#{item.usrTitle},#{item.usrRlName},#{item.usrName},#{item.usrGrade},#{item.usrBu},#{item.usrBudget})
        </foreach>
    </insert>

    <!-- 通过LaUser的id将数据库表中对应的数据删除-->
    <delete id="deleteLaUserById" parameterType="java.lang.String">
        delete from la_user
        where usr_id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将LaUser对应的数据库表的数据删除-->
    <delete id="deleteLaUser" parameterType="com.cisco.la.common.Assist">
        delete from la_user
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过LaUser的id将LaUser的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateLaUserById" parameterType="com.cisco.la.entity.LaUser">
        update la_user set
            usr_balance=#{usrBalance}
            ,usr_active=#{usrActive}
            ,usr_title=#{usrTitle}
            ,usr_rl_name=#{usrRlName}
            ,usr_name=#{usrName}
            ,usr_grade=#{usrGrade}
            ,usr_bu=#{usrBu}
            ,usr_budget=#{usrBudget}
        where usr_id=#{usrId}
    </update>

    <!-- 通过LaUser的id将LaUser中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyLaUserById" parameterType="com.cisco.la.entity.LaUser">
        update la_user
        <set>
            <if test="usrBalance != null">
                usr_balance=#{usrBalance},
            </if>
            <if test="usrActive != null">
                usr_active=#{usrActive},
            </if>
            <if test="usrTitle != null">
                usr_title=#{usrTitle},
            </if>
            <if test="usrRlName != null">
                usr_rl_name=#{usrRlName},
            </if>
            <if test="usrName != null">
                usr_name=#{usrName},
            </if>
            <if test="usrGrade != null">
                usr_grade=#{usrGrade},
            </if>
            <if test="usrBu != null">
                usr_bu=#{usrBu},
            </if>
            <if test="usrBudget != null">
                usr_budget=#{usrBudget},
            </if>
        </set>
        where usr_id=#{usrId}
    </update>

    <!-- 通过辅助工具Assist中的条件将LaUser中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateLaUser" parameterType="map">
        update la_user
        <set>
                usr_id=#{enti.usrId},
                usr_balance=#{enti.usrBalance},
                usr_active=#{enti.usrActive},
                usr_title=#{enti.usrTitle},
                usr_rl_name=#{enti.usrRlName},
                usr_name=#{enti.usrName},
                usr_grade=#{enti.usrGrade},
                usr_bu=#{enti.usrBu},
                usr_budget=#{enti.usrBudget},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将LaUser中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyLaUser" parameterType="map">
        update la_user
        <set>
            <if test="enti.usrId != null">
                usr_id=#{enti.usrId},
            </if>
            <if test="enti.usrBalance != null">
                usr_balance=#{enti.usrBalance},
            </if>
            <if test="enti.usrActive != null">
                usr_active=#{enti.usrActive},
            </if>
            <if test="enti.usrTitle != null">
                usr_title=#{enti.usrTitle},
            </if>
            <if test="enti.usrRlName != null">
                usr_rl_name=#{enti.usrRlName},
            </if>
            <if test="enti.usrName != null">
                usr_name=#{enti.usrName},
            </if>
            <if test="enti.usrGrade != null">
                usr_grade=#{enti.usrGrade},
            </if>
            <if test="enti.usrBu != null">
                usr_bu=#{enti.usrBu},
            </if>
            <if test="enti.usrBudget != null">
                usr_budget=#{enti.usrBudget},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>